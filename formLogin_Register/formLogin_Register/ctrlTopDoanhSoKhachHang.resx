<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAJASURBVEhL7ZbNSxVRGMavmyioIGiRUOAiaBeEf0Mt+gAxr9yvxeXuCqFoUwRSy6I/wUVLS9eK
        IvZnVISuDEFdhB9gkFq/Z3hHjmfemUaviAsfeLgz53ne5z0z98yZqZzh1KHVavU2m82ncBZ+hWtGHc80
        Go0n7Xb7mtm7Bw1vwgnCd+Hf/3BXXtVY+dFAwGPCtqLwMtykdsBiDgcKXxCwFwUehrpDzy2uHPi/ahR1
        0zTlHhcwbLHFwHwdbgTFIdcIesvE+qvV6gV4rl6v32bsNdpy5E25jt5r8fnA+DEq3CcBD8yWAZO4iD7u
        1THRMbP5qNVqfRhzVy/BC/wOwS/wJ1xhbAqmC6mHsc8wrt0h+4Z5siDgmVNUlu+V0el0LnG8Emma9EjS
        xAOGGafgnRiPe+SW3lcO/lFHn06aeED8EZrV0CSFlWk+J68Wn6N9S4I8IO6v5rBpihLNf8lH4yuOtp6E
        eED0dqnLpuU9Yglp9jIJCaCxwLNhw1kgHrjVIqvxjjRC5mMtZtg8aip+NykLxMziIuCNNDaKR7HmUQ2d
        pmL+4uI/zDxOjK1qczD9Q6yXJbX5j1PBBvIJuUcermaQ82lNiN8lzuc51lts0bweizcQAVPeljkJk4Xm
        Ae1h4D1AJle8ZQoYi14S2pFecYW39ILgi+O8Fh/no3YHvJpyLwkB8z24ExQflX9oetdiy4GCk/8QSEHz
        k//0ScHze5UQbZXbUbjHbXlVY+Xdg8Dw83aRlfpb1DE8/s/bMxwPKpV/5FlX7nGkjBoAAAAASUVORK5C
        YII=
</value>
  </data>
  <data name="btnExport.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAH2SURBVGhD7ZnNSgJRGIYtuoY8djNRmkl0C7Vs0bILKFcRtcxdf7owUFf9UBQ63kW1SUKsRdAN
        1OJ0zvgNyfBKjN+ZD0bmhQfFxfujMzqDmVSpUv2vdra43s6VegYtxKunSmsUz5cx7IcCJHijeL6AuQgU
        zxcyl4Di+ULmElA8X8hcAornC5lLQPF8IXMJKJ4vZC4BxfOFzF3zmFv1GX2N4vkaNY2De1XU16qgr1Re
        35nnwesUz9doWBzY8s3skq7PL/qPwQiK5ysc6Bo7wJb/Omzol+0j3VLDERTPFwp1STDgu9rx6e1UdGsh
        n9wBwxHHWne7c1SBJxSKeDDfIrdqxS8UlfAAy0+t03QyApVF3JjyLXMSXpoytlBUwgOIBnsEKosI3snB
        7jkqwsA71eXyLNWJLlQWMe5QcMTJxCNQWUTMAwzeJlWKJlQWEfuAi84GVYomVBYxNYfQx14VFWAgdBIH
        X6N2xCTA8rX2Gau8FSqLsD9kdoT9JKKCB3gVrfUM1ZhcqKxL0ICnrQPT3UF5KxTqkvCAZ1O+qZaTdzH3
        uV9P7uV0om9o/m4pC8m8pbQk+qZ+HBTPFzKXgOL5QuYSUDxfyFwCiucLmUtA8Xwhcwkoni9kLgHF82XM
        BmFzAfoUz5f/N6sqvYOQuBg4/Zs1VaqpVSbzCwKY9ytvVRhBAAAAAElFTkSuQmCC
</value>
  </data>
</root>